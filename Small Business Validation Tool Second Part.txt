%let PROCHTTP_PROXY=;
filename final "/data/bbm/data/sasdata/sasuser/Billy/fonoa_final_response.txt";
libname wholeurl "/data/bbm/data/sasdata/sasuser/Billy";

proc import datafile='/data/bbm/data/sasdata/sasuser/Billy/Sample_2 for Fonoa API.xlsx'
                  out=Samples_for_Fonoa DBMS=xlsx replace;
run;

data whole_record;
set wholeurl.whole_fonoa_returned_url end=eof;
      count+1;
      if eof then call symputx("total_numbers_record", count);
run;

%macro fonoa_final_result(VALIDATION_ID);
      proc http
        url="https://api-demo.fonoa.com/Lookup/v2/single-validations/&VALIDATION_ID"
        method=get
        ct="application/json"
        out=final
        timeout=30;
        headers "Accept"="application/json";
        headers "Ocp-Apim-Subscription-Key"="";
      run;

      data fonoa_returned_record;
      length pair $300. name $100. value $300.;
      infile final lrecl=1024 pad;
      input json $1000.;
      json=substr(compress(json,'{}'),35,length(json)-35);

      do index=1 to countw(json, ',', 'q');
            pair = scan(json, index, ',', 'q');
            name = dequote(scan(pair,1, ':', 'q'));
            value = dequote(scan(pair,2,':','q'));
            select (name);
            when ('found_in_official_database') found_in_official_database = value;
            when ('is_business') is_business = value;
            when ('requested_at') requested_at = value;
            when ('tax_registered') tax_registered = value;
            when ('validation_id') validation_id = value;
            when ('country_iso_code') country_iso_code = value;
            when ('tax_identification_number') Business_ID = value;
            when ('country_iso_code') country_iso_code = value;
            when ('name') business_name = value;
            when ('format') format = value;
            when ('business_status') business_status = value;
            when ('validation_database_source') validation_database_source = value;
            when ('message') returned_message = value;
            otherwise put 'Note: unknown field' pair=;
            end;
      end;
      drop pair name value json index;
      run;

      proc append base=final_fonoa_returned_record
            data = fonoa_returned_record force;

      data wholeurl.final_fonoa_returned_record;
      set final_fonoa_returned_record;
      run;

%mend;

%macro final_loop;
      %do counter=1 %to &total_numbers_record;
      data _null_;
      set whole_record;
            if _n_ = &counter;
            call symput ("VALIDATION_ID", VALIDATION_ID);
      run;
      %fonoa_final_result (&VALIDATION_ID);
      %end;
%mend;
%final_loop;

proc sort data=final_fonoa_returned_record nodup;
by Business_ID;
run;

proc sort data=Samples_for_Fonoa;
by Business_ID;
run;

data final_report;
merge Samples_for_Fonoa (in=in_Samples_for_Fonoa)
            final_fonoa_returned_record (in=in_final_fonoa_returned_record);
by Business_ID;
if in_Samples_for_Fonoa;
run;

proc export data=final_report
                  outfile="/data/bbm/data/sasdata/sasuser/Billy/Sample_2 for Fonoa API-Final Output.xlsx"
                  dbms=xlsx
                  replace;
                  sheet='40 Samples for Testing';
run;